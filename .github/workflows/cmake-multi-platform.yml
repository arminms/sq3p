name: Build and Test (Linux/macOS/Windows)

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # allows running this workflow manually from the Actions tab
  workflow_dispatch:

# enable the job to write the dependency metadata
permissions:
  contents: write

# enable the vcpkg dependency graph integration
env:
  GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
  VCPKG_FEATURE_FLAGS: dependencygraph

jobs:
  build:
    strategy:
      matrix:
        os: ['ubuntu-latest', 'windows-latest', 'macos-latest']
    runs-on: ${{matrix.os}}

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: 'recursive'

    - name: Bootstrap vcpkg
      run: ${{github.workspace}}/vcpkg/bootstrap-vcpkg.sh -disableMetrics

    - name: Configure with CMake (Linux)
      run: |
        cmake -S ${{github.workspace}} -B build \
        -DCMAKE_TOOLCHAIN_FILE=${{github.workspace}}/vcpkg/scripts/buildsystems/vcpkg.cmake
      if: matrix.os == 'ubuntu-latest'

    - name: Configure with CMake (Windows)
      run: |
        cmake -S ${{github.workspace}} -B build \
        -DCMAKE_TOOLCHAIN_FILE="${{github.workspace}}/vcpkg/scripts/buildsystems/vcpkg.cmake"
      if: matrix.os == 'windows-latest'

    - name: Configure with CMake (macOS)
      run: |
        export OpenMP_ROOT=$(brew --prefix)/opt/libomp
        run: |
          cmake -S ${{github.workspace}} -B build \
          -DCMAKE_TOOLCHAIN_FILE=${{github.workspace}}/vcpkg/scripts/buildsystems/vcpkg.cmake
      if: matrix.os == 'macos-latest'

    - name: Build
      run: cmake --build build

    - name: Test
      working-directory: ${{github.workspace}}/build
      run: ctest
